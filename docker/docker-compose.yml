services:
  # MySQL Database - Latest Stable
  mysql:
    image: mysql:8.0.35
    container_name: chat-server-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-chat_server}
      MYSQL_USER: ${MYSQL_USER:-chatuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-chatpassword}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpassword}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - chat-server-network

  # Redis Cache - Latest Stable
  redis:
    image: redis:7.2.3-alpine
    container_name: chat-server-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispassword}
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - chat-server-network

  # RabbitMQ Message Broker - Latest Stable
  rabbitmq:
    image: rabbitmq:3.12.8-management
    container_name: chat-server-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"      # AMQP
      - "15672:15672"    # RabbitMQ Management UI
      - "61613:61613"    # STOMP over TCP
      - "15674:15674"    # STOMP over WebSocket
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-password}
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error},{default,info}] disk_free_limit 2147483648
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - chat-server-network

  # Cassandra Database - Latest Stable
  cassandra:
    image: cassandra:4.1.3
    container_name: chat-server-cassandra
    restart: unless-stopped
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_CLUSTER_NAME: ChatServerCluster
      CASSANDRA_DC: datacenter1
      CASSANDRA_RACK: rack1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_SEEDS: cassandra
      CASSANDRA_AUTHENTICATOR: PasswordAuthenticator
      CASSANDRA_AUTHORIZER: CassandraAuthorizer
      MAX_HEAP_SIZE: 512M
      HEAP_NEWSIZE: 100M
    volumes:
      - cassandra_data:/var/lib/cassandra
      - ./docker/cassandra/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    networks:
      - chat-server-network



volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  cassandra_data:
    driver: local

networks:
  chat-server-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16