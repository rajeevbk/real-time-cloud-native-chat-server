# Spring Boot Application
server.port=8081

# Spring Security (for validating JWTs on REST APIs)
# Points to the Keycloak container within the Docker network.
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/chat-app-realm


# Service Discovery (URL for the user service)
services.user-service.url=http://localhost:8082

# Cassandra Database
# Connects to the 'cassandra' container on the Docker network.
spring.data.cassandra.contact-points=cassandra
spring.data.cassandra.port=9042
spring.data.cassandra.local-datacenter=datacenter1
spring.data.cassandra.keyspace-name=chat_server
spring.data.cassandra.username=cassandra
spring.data.cassandra.password=cassandrapassword123
spring.data.cassandra.schema-action=create-if-not-exists

# RabbitMQ Message Broker
# Connects to the 'rabbitmq' container on the Docker network.
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
# Credentials from the .env file
spring.rabbitmq.username=admin
spring.rabbitmq.password=password
spring.rabbitmq.stomp-port=61613

# Redis Cache
# Connects to the 'redis' container on the Docker network.
spring.data.redis.host=localhost
spring.data.redis.port=6379
# Password from the .env file
spring.data.redis.password=redispassword

# --- OpenAPI / Swagger UI Configuration ---
# Keycloak realm  discovery document
keycloak.openid-connect-url=http://localhost:8080/realms/chat-app-realm/.well-known/openid-configuration
# Explicitly define the path to the Swagger UI
springdoc.swagger-ui.path=/swagger-ui.html
